package ArduinoML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActuator = createDescriptorForActuator();
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptBrick = createDescriptorForBrick();
  /*package*/ final ConceptDescriptor myConceptSensor = createDescriptorForSensor();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  /*package*/ final EnumerationDescriptor myEnumerationSTATUS = new EnumerationDescriptor_STATUS();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActuator, myConceptApp, myConceptBrick, myConceptSensor, myConceptState, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Actuator:
        return myConceptActuator;
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.Brick:
        return myConceptBrick;
      case LanguageConceptSwitch.Sensor:
        return myConceptSensor;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationSTATUS);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Action", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1086195fL);
    b.class_(false, false, false);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869549407");
    b.version(2);
    b.property("status", 0x7c7ea7885c791aacL).type(MetaIdFactory.dataTypeId(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861958L)).origin("8970791711877438124").done();
    b.associate("actuator", 0x7c7ea7885c791e11L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb13L).optional(false).origin("8970791711877438993").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActuator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Actuator", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb13L);
    b.class_(false, false, false);
    b.super_("ArduinoML.structure.Brick", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb0eL);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869263123");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "App", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb15L);
    b.class_(false, false, true);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869263125");
    b.version(2);
    b.associate("init_state", 0x7c7ea7885c79d398L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861955L).optional(false).origin("8970791711877485464").done();
    b.aggregate("bricks", 0x1b68394a1081bb16L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb0eL).optional(false).ordered(true).multiple(true).origin("1974891426869263126").done();
    b.aggregate("state", 0x7c7ea7885c79d395L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861955L).optional(false).ordered(true).multiple(true).origin("8970791711877485461").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrick() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Brick", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb0eL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869263118");
    b.version(2);
    b.property("pin", 0x1b68394a1081bb11L).type(PrimitiveTypeId.INTEGER).origin("1974891426869263121").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Sensor", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb14L);
    b.class_(false, false, false);
    b.super_("ArduinoML.structure.Brick", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb0eL);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869263124");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "State", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861955L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869549397");
    b.version(2);
    b.aggregate("actions", 0x1b68394a1086195dL).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1086195fL).optional(true).ordered(true).multiple(true).origin("1974891426869549405").done();
    b.aggregate("transition", 0x1b68394a10861961L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861960L).optional(false).ordered(true).multiple(true).origin("1974891426869549409").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Transition", 0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861960L);
    b.class_(false, false, false);
    b.origin("r:4854ca2b-a3e0-45dd-8ae9-4f6abda320c6(ArduinoML.structure)/1974891426869549408");
    b.version(2);
    b.property("status", 0x7c7ea7885c79064fL).type(MetaIdFactory.dataTypeId(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861958L)).origin("8970791711877432911").done();
    b.associate("sensor", 0x7c7ea7885c7909b4L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a1081bb14L).optional(false).origin("8970791711877433780").done();
    b.associate("target", 0x7c7ea7885c7913e3L).target(0x350aa42ef9c440ddL, 0x82b2052371c06126L, 0x1b68394a10861955L).optional(false).origin("8970791711877436387").done();
    return b.create();
  }
}
